---
# yaml-language-server: $schema=https://schemas.bykaj.io/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
spec:
  chartRef:
    kind: OCIRepository
    name: sabnzbd
  interval: 1h
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sabnzbd
              tag: 4.5.4@sha256:857fc6cc6f575e3b4406f8957dbfa98f7624ca0807a061f0cfc3d6c2d49eff43
            env:
              TZ: "${TIMEZONE}"
              SABNZBD__PORT: &port 80
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                {{ .Release.Name }},
                {{ .Release.Name }}.downloads,
                {{ .Release.Name }}.downloads.svc,
                {{ .Release.Name }}.downloads.svc.cluster,
                {{ .Release.Name }}.downloads.svc.cluster.local,
                ${APP_DOMAIN:=${APP_SUBDOMAIN:=${APP}}.${DOMAIN_APP}},
                ${APP_SUBDOMAIN:=${APP}}.${TAILSCALE_DOMAIN}
            envFrom:
              - secretRef:
                  name: sabnzbd-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 20m
                memory: 128Mi
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 4000
        runAsGroup: 4000
        fsGroup: 4000
        fsGroupChangePolicy: OnRootMismatch
    ingress:
      ts:
        className: tailscale
        hosts:
          - host: &host ${APP_SUBDOMAIN:=${APP}}.${TAILSCALE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      backups:
        type: nfs
        server: "${NAS_HOST}"
        path: /mnt/vault-alpha/Backups
        globalMounts:
          - path: /mnt/backups
            subPath: Apps/SABnzbd
      downloads:
        type: nfs
        server: "${NAS_HOST}"
        path: /mnt/vault-beta/Downloads
        globalMounts:
          - path: /mnt/downloads
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /config/logs
            subPath: logs
      # TODO: Enable this when having enough storage on nodes for downloads
      # ephemeral:
      #   type: custom
      #   volumeSpec:
      #     ephemeral:
      #       volumeClaimTemplate:
      #         spec:
      #           accessModes:
      #             - ReadWriteOnce
      #           storageClassName: openebs-hostpath
      #           resources:
      #             requests:
      #               storage: 100Gi
      #   advancedMounts:
      #     sabnzbd:
      #       app:
      #         - path: /mnt/downloads/incomplete
      #           subPath: incomplete
    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: "Downloads"
          gethomepage.dev/name: "${APP_NAME}"
          gethomepage.dev/icon: "sh-sabnzbd.svg"
          gethomepage.dev/widget.type: "sabnzbd"
          gethomepage.dev/widget.url: "https://${APP_DOMAIN:=${APP_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SABNZBD_API_KEY}}` }}"
          gethomepage.dev/widget.fields: '["rate", "queue", "timeleft"]'
        hostnames:
          - "${APP_DOMAIN:=${APP_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"
        parentRefs:
          - name: envoy-internal
            namespace: network
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

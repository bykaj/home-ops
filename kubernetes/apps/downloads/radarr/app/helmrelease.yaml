---
# yaml-language-server: $schema=https://schemas.bykaj.io/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  chartRef:
    kind: OCIRepository
    name: radarr
  interval: 1h
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 6.0.3.10276@sha256:0ebc60aa20afb0df76b52694cee846b7cf7bd96bb0157f3b68b916e77c8142a0
            env:
              TZ: "${TIMEZONE}"
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 80
              RADARR__UPDATE__BRANCH: develop
            envFrom:
              - secretRef:
                  name: radarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 5m
                memory: 256Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 4000
        runAsGroup: 4000
        fsGroup: 4000
        fsGroupChangePolicy: OnRootMismatch
    ingress:
      ts:
        className: tailscale
        hosts:
          - host: &host ${APP_SUBDOMAIN:=${APP}}.${TAILSCALE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      backups:
        type: nfs
        server: "${NAS_HOST}"
        path: /mnt/vault-alpha/Backups
        globalMounts:
          - path: /mnt/backups
            subPath: Apps/Radarr
      downloads:
        type: nfs
        server: "${NAS_HOST}"
        path: /mnt/vault-beta/Downloads
        globalMounts:
          - path: /mnt/downloads
      media:
        type: nfs
        server: "${NAS_HOST}"
        path: /mnt/vault-alpha/Media
        globalMounts:
          - path: /mnt/media
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /config/logs
            subPath: logs
    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: "Downloads"
          gethomepage.dev/name: "${APP_NAME}"
          gethomepage.dev/icon: "sh-radarr.svg"
          gethomepage.dev/widget.type: "radarr"
          gethomepage.dev/widget.url: "https://${APP_DOMAIN:=${APP_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_RADARR_API_KEY}}` }}"
          gethomepage.dev/widget.enableQueue: "true"
          gethomepage.dev/widget.fields: '["wanted", "missing", "queued", "movies"]'
        hostnames:
          - "${APP_DOMAIN:=${APP_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"
        parentRefs:
          - name: envoy-internal
            namespace: network
          # Send auth requests to the authentik outpost
          # - backendRefs:
          #     - name: authentik-outpost-proxy
          #       namespace: security
          #       port: 80
          #   matches:
          #     - path:
          #         type: PathPrefix
          #         value: /outpost.goauthentik.io
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

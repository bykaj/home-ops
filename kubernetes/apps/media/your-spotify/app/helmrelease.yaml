---
# yaml-language-server: $schema=https://schemas.bykaj.io/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app your-spotify
spec:
  chartRef:
    kind: OCIRepository
    name: your-spotify
  interval: 1h
  values:
    controllers:
      server:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/yooooomi/your_spotify_server
              tag: 1.14.0@sha256:73a67b06ad9566ee7df6138dce56358cdea499d8c7fa4aedc8f1d1bc8a9baada
            env:
              # Don't use 'Spotify' in any domain name.
              # Ref: https://github.com/Yooooomi/your_spotify/pull/254
              API_ENDPOINT: &apiEndpoint "https://${APP_SUBDOMAIN:=${APP}}-api.${DOMAIN_APP}"
              CLIENT_ENDPOINT: "https://${APP_SUBDOMAIN:=${APP}}.${DOMAIN_APP}"
              MONGO_ENDPOINT: "mongodb://your-spotify-mongodb:27017/your_spotify"
              PORT: &serverPort 8080
              TIMEZONE: "${TIMEZONE}"
            envFrom:
              - secretRef:
                  name: your-spotify-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *serverPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 512Mi
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
      web:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/yooooomi/your_spotify_client
              tag: 1.14.0@sha256:a39557a0772a825e6d0f00de31ce813771a2f158be718b40ec58eb3aa8bd76c3
            env:
              API_ENDPOINT: *apiEndpoint
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &webPort 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: *securityContext
      mongodb:
        type: statefulset
        statefulset:
          podManagementPolicy: OrderedReady
        containers:
          app:
            image:
              repository: docker.io/library/mongo
              tag: 6.0.4-focal
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          mongodb:
            app:
              - path: /data/db
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
    route:
      server:
        hostnames:
          - "${APP_SUBDOMAIN:=${APP}}-api.${DOMAIN_APP}"
        parentRefs:
          - name: envoy-internal
            namespace: network
        rules:
          - backendRefs:
              - identifier: server
                port: *serverPort
      web:
        hostnames:
          - "${APP_SUBDOMAIN:=${APP}}.${DOMAIN_APP}"
        parentRefs:
          - name: envoy-internal
            namespace: network
        rules:
          - backendRefs:
              - identifier: web
                port: *webPort
    service:
      server:
        controller: server
        primary: true
        ports:
          http:
            port: *serverPort
      web:
        controller: web
        ports:
          http:
            port: *webPort
      mongodb:
        controller: mongodb
        ports:
          db:
            port: 27017

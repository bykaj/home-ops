---
# yaml-language-server: $schema=https://schemas.bykaj.io/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  chartRef:
    kind: OCIRepository
    name: authentik
  interval: 1h
  values:
    global:
      env:
        - name: AUTHENTIK_REDIS__DB
          value: "1"
        - name: AUTHENTIK_STORAGE__MEDIA__BACKEND
          value: "s3"
        - name: AUTHENTIK_STORAGE__MEDIA__S3__SECURE_URLS
          value: "true"
        - name: TZ
          value: "${TIMEZONE}"
      envFrom:
        - secretRef:
            name: &secret authentik-secret
      podAnnotations:
        reloader.stakater.com/auto: "true"
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      volumeMounts:
        - name: custom-templates
          mountPath: /templates
      volumes:
        - name: custom-templates
          configMap:
            name: authentik-custom-templates
    authentik:
      disable_startup_analytics: true
      disable_update_check: true
      email:
        port: 587
        timeout: 30
        use_tls: true
      error_reporting:
        enabled: false
      events:
        context_processors:
          geoip: "/geoip/GeoLite2-City.mmdb"
          asn: "/geoip/GeoLite2-ASN.mmdb"
      log_level: "info"
      postgresql:
        host: "${DB_HOST}"
      redis:
        host: "${REDIS_HOST}"
    geoip:
      enabled: false
      editionIds: "GeoLite2-City GeoLite2-ASN"
      existingSecret:
        secretName: *secret
        accountId: "GEOIPUPDATE_ACCOUNT_ID"
        licenseKey: "GEOIPUPDATE_LICENSE_KEY"
      updateInterval: 24
      resources:
        requests:
          cpu: 5m
          memory: 128Mi
        limits:
          memory: 256Mi
    server:
      initContainers:
        - name: init-db
          image: ghcr.io/home-operations/postgres-init:17.6.0@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
          envFrom:
            - secretRef:
                name: *secret
      metrics: &metrics
        prometheus:
          serviceMonitor:
            enabled: true
      pdb:
        enabled: true
        minAvailable: 1
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi
      replicas: 2
      route:
        main:
          enabled: true
          hostnames:
            - "auth.${DOMAIN_ID}"
          parentRefs:
            - name: envoy-external
              namespace: network
              sectionName: https
      topologySpreadConstraints:
        - maxSkew: 1 # Skew of 1 allows for rolling updates
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: *app
              app.kubernetes.io/component: server
          whenUnsatisfiable: DoNotSchedule
      volumeMounts:
        - name: custom-assets
          mountPath: /web/dist/custom.css
          subPath: custom.css
      volumes:
        - name: custom-assets
          configMap:
            name: authentik-custom-assets
    worker:
      metrics: *metrics
      pdb:
        enabled: true
        minAvailable: 1
      replicas: 2
      resources:
        requests:
          cpu: 80m
          memory: 512Mi
        limits:
          memory: 1Gi
      topologySpreadConstraints:
        - maxSkew: 1 # Skew of 1 allows for rolling updates
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: *app
              app.kubernetes.io/component: worker
          whenUnsatisfiable: DoNotSchedule
      volumes:
        - name: sidecar-blueprints
          emptyDir: {}
      volumeMounts:
        - &blueprintsMount
          name: sidecar-blueprints
          mountPath: &blueprintsFolder /blueprints/sidecar
      extraContainers:
        - name: k8s-sidecar
          image: ghcr.io/home-operations/k8s-sidecar:1.30.9@sha256:74d65c3def9276b24b5bfe41f8efb773174e7a1ecf3c9b5a31bd02cfdee232c9
          env:
            - name: LABEL
              value: k8s-sidecar.home.arpa/application
            - name: LABEL_VALUE
              value: *app
            - name: FOLDER
              value: *blueprintsFolder
            - name: NAMESPACE
              value: ALL
            - name: RESOURCE
              value: both
            - name: METHOD
              value: WATCH
            - name: UNIQUE_FILENAMES
              value: "true"
            - name: DEFAULT_FILE_MODE
              value: "660"
          volumeMounts:
            - *blueprintsMount
    prometheus:
      rules:
        enabled: true
  postRenderers:
    # Allow pods to be evicted when unhealthy
    # This occurs during Postgres failover, which is required for node draining
    - kustomize:
        patches:
          - patch: |
              - op: add
                path: /spec/unhealthyPodEvictionPolicy
                value: AlwaysAllow
            target:
              group: policy
              version: v1
              kind: PodDisruptionBudget
